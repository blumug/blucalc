{
  "name": "randomcolor",
  "version": "0.1.1",
  "description": "For generating attractive random colors",
  "main": "randomColor.js",
  "directories": {
    "test": "tests"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/davidmerfield/randomColor.git"
  },
  "keywords": [
    "attractive",
    "random",
    "color",
    "generator"
  ],
  "author": {
    "name": "David Merfield"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/davidmerfield/randomColor/issues"
  },
  "homepage": "http://llllll.li/randomColor/",
  "readme": "# Random Color\n\nFor generating attractive random colors. See the results on [the demo](http://llllll.li/randomColor/).   \n  \n  \n    \n[![Hello](http://llllll.li/randomColor/repobg.png)](http://llllll.li/randomColor)\n\n### Options\n\nYou can pass an options object to influence the type of color it produces. The options object accepts the following properties:\n\n**Hue** – Controls the hue of the generated color. You can pass a string representing a color name (e.g. 'orange'). Possible color names are *red, orange, yellow, green, blue, purple, pink and monochrome*.\n\n**Luminosity** – Controls the luminosity of the generated color. You can pass a string containing *bright, light* or *dark*.\n\n**Count** – An integer which specifies the number of colors to generate.\n\n**Format** – A string which specifies the format of the generated color. Possible values are *hsvArray, rgb, rgbArray, and hex*. The type of the generated color will vary based on the format chosen.\n\n### Examples\n\n```javascript\n\n// Returns a hex code for an attractive color\nrandomColor(); \n\n// Returns an array of ten green colors\nrandomColor({\n   count: 10,\n   hue: 'green'\n});\n\n// Returns a hex code for a light blue\nrandomColor({\n   luminosity: 'light',\n   hue: 'blue'\n});\n\n// Returns a hex code for a 'truly random' color\nrandomColor({\n   luminosity: 'random',\n   hue: 'random'\n});\n\n// Returns a bright color in RGB\nrandomColor({\n   luminosity: 'bright',\n   format: 'rgb' // e.g. 'rgb(225,200,20)'\n});\n\n```\n\n### License\n\nThis project is licensed under the terms of the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "randomcolor@0.1.1",
  "dist": {
    "shasum": "1f805c3f7342109163eb7dc2f976785e56262477"
  },
  "_from": "randomcolor@",
  "_resolved": "https://registry.npmjs.org/randomcolor/-/randomcolor-0.1.1.tgz"
}
